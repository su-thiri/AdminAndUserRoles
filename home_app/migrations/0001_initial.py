# Generated by Django 3.2.23 on 2024-01-04 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import home_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='User Email')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether the user can log in.', verbose_name='User Active Status')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether the user marked as deleted.', verbose_name='Marked as Deleted')),
                ('is_modified', models.BooleanField(default=False, help_text='Designates whether the user modified the account.', verbose_name='Marked as Modified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'ordering': ('-pk',),
            },
            managers=[
                ('objects', home_app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='information', serialize=False, to='home_app.user')),
                ('about', models.TextField(blank=True, verbose_name='About')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='UserVerification',
            fields=[
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registered_role', models.CharField(choices=[('sale_admin', 'SALE ADMIN'), ('salesperson', 'SALESPERSON')], max_length=11, verbose_name='Registered Role')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('status', django_fsm.FSMField(choices=[('unverified', 'unverified'), ('verified', 'verified'), ('revoked', 'revoked'), ('failed', 'failed')], default='unverified', max_length=50, verbose_name='Verification Status')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
    ]
